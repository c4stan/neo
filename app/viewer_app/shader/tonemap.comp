#version 450

#include "xs.glsl"

#include "common.glsl"

layout ( set = xs_resource_binding_set_per_draw_m, binding = 0, rgb10_a2 ) uniform writeonly image2D img_color;
layout ( set = xs_resource_binding_set_per_draw_m, binding = 1 ) uniform texture2D tex_color;
layout ( set = xs_resource_binding_set_per_draw_m, binding = 2 ) uniform sampler sampler_point;

layout ( local_size_x = 8, local_size_y = 8, local_size_z = 1 ) in;

void main ( void ) {
    // screen uv
    vec2 screen_uv = vec2 ( ( gl_GlobalInvocationID.xy + vec2(0.5) ) / frame_cbuffer.resolution_f32 );
    //vec2 screen_uv = vec2 ( gl_FragCoord.xy / frame_cbuffer.resolution_f32 );

    // sample
    vec3 color = texture ( sampler2D ( tex_color, sampler_point ), screen_uv ).xyz;

    // tonemap
    float luma = rgb_to_luma ( color );
    //color = 1.0.xxx - exp ( -color );
    color = color / ( 1 + luma );

    imageStore ( img_color, ivec2 ( gl_GlobalInvocationID.xy ), vec4 ( linear_to_srgb ( color ), 1 ) );
}
