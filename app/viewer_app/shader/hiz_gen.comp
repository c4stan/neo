#version 450

#include "xs.glsl"

#include "common.glsl"

layout ( binding = 0, set = xs_shader_binding_set_dispatch_m ) uniform draw_uniforms_t {
    vec2 src_resolution_f32;
    vec2 dst_resolution_f32;
} draw_uniforms;

layout ( binding = 1, set = xs_shader_binding_set_dispatch_m ) uniform texture2D tex_depth;
layout ( binding = 2, set = xs_shader_binding_set_dispatch_m, r32f ) uniform writeonly image2D img_color;
layout ( binding = 3, set = xs_shader_binding_set_dispatch_m ) uniform sampler sampler_point;

layout ( local_size_x = 8, local_size_y = 8, local_size_z = 1 ) in;

void main() {
    vec2 dst_to_src = draw_uniforms.src_resolution_f32 / draw_uniforms.dst_resolution_f32;
    vec2 src_uv = ( gl_GlobalInvocationID.xy + vec2 ( 0.5 ) ) * dst_to_src / draw_uniforms.src_resolution_f32;
    vec4 depths = textureGather ( sampler2D ( tex_depth, sampler_point ), src_uv );
    float min_depth = min ( min ( depths.x, depths.y ), min ( depths.z, depths.w ) );
    imageStore ( img_color, ivec2 ( gl_GlobalInvocationID.xy ), vec4 ( min_depth ) );
}
